name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write        # Required to create and push release tags
  pull-requests: write   # Required to create PRs for version updates
  issues: write          # Required to create and manage labels on PRs

jobs:
  discover-modules:
    name: Discover
    uses: ./.github/workflows/discover.yml

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: discover-modules

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Configure Git
      run: |
        # Configure git user for semantic-release
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Create Release
      id: release
      uses: cycjimmy/semantic-release-action@v4
      with:
        semantic_version: 24.2.5
        # Only install plugins that are not built-in to semantic-release
        # Built-in plugins (automatically available):
        #   - @semantic-release/commit-analyzer
        #   - @semantic-release/release-notes-generator
        #   - @semantic-release/github
        # Extra plugins and presets (need explicit installation):
        extra_plugins: |
          @semantic-release/changelog@6.0.3
          conventional-changelog-conventionalcommits@9.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create Pull Request with Changelog
      if: success() && steps.release.outputs.new_release_published == 'true'
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore(release): v${{ steps.release.outputs.new_release_version }} [skip ci]"
        title: "chore(release): v${{ steps.release.outputs.new_release_version }}"
        body: |
          This PR contains the release changes for v${{ steps.release.outputs.new_release_version }}, including:
          - Updated CHANGELOG.md
          - Release tag: v${{ steps.release.outputs.new_release_version }}

          This PR was automatically created by the release workflow.
        branch: release-${{ steps.release.outputs.new_release_version }}
        labels: |
          kind/release
          lifecycle/automated

    - name: Build Terraform Modules
      if: steps.release.outputs.new_release_published == 'true'
      run: |
        # Create release directory
        mkdir -p release-artifacts

        # Get repository name for package naming
        REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)

        # Package each discovered module dynamically
        echo "Discovered modules: ${{ needs.discover-modules.outputs.modules }}"

        # Parse modules JSON array and iterate
        for module in $(echo '${{ needs.discover-modules.outputs.modules }}' | jq -r '.[]'); do
          echo "Creating $module module package..."
          tar --exclude-from $GITHUB_WORKSPACE/.gitignore \
            -czf $GITHUB_WORKSPACE/release-artifacts/${REPO_NAME}-${module}-${{ steps.release.outputs.new_release_version }}.tar.gz \
            -C $GITHUB_WORKSPACE/modules/$module .
        done

        # List created artifacts
        echo "Created artifacts:"
        ls -la $GITHUB_WORKSPACE/release-artifacts/

    - name: Upload Release Assets
      if: steps.release.outputs.new_release_published == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.release.outputs.new_release_version }}
        files: release-artifacts/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
