name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      test_examples:
        description: 'Run example tests'
        required: false
        default: false
        type: boolean

env:
  TERRAFORM_VERSION: 1.11.0
  TFLINT_VERSION: v0.48.0
  TRIVY_VERSION: v0.63.0

permissions:
  contents: read         # Required for checkout and reading repository content
  security-events: write # Required for CodeQL to upload security scan results
  actions: read          # Required for CodeQL to read workflow files

jobs:
  discover-modules-examples:
    name: Discover
    uses: ./.github/workflows/discover.yml

  terraform-checks:
    name: Terraform Checks (${{ matrix.module }})
    runs-on: ubuntu-latest
    needs: discover-modules-examples
    strategy:
      matrix:
        module: ${{ fromJson(needs.discover-modules-examples.outputs.modules) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Check Terraform Format
      run: terraform fmt -check -recursive modules/

    - name: Run Terraform Init
      run: terraform init
      working-directory: modules/${{ matrix.module }}

    - name: Run Terraform Validate
      run: terraform validate
      working-directory: modules/${{ matrix.module }}

  terraform-tflint:
    name: Terraform Lint (${{ matrix.module }})
    runs-on: ubuntu-latest
    needs: discover-modules-examples
    strategy:
      matrix:
        module: ${{ fromJson(needs.discover-modules-examples.outputs.modules) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Cache TFLint Plugin Directory
      uses: actions/cache@v3
      with:
        path: ~/.tflint.d/plugins
        key: ${{ runner.os }}-tflint-${{ hashFiles('.config/.tflint.hcl') }}

    - name: Setup TFLint
      uses: terraform-linters/setup-tflint@v4
      with:
        tflint_version: ${{ env.TFLINT_VERSION }}

    - name: Show TFLint Version
      run: tflint --version

    - name: Initialize TFLint
      run: tflint --init --config .config/.tflint.hcl

    - name: Run TFLint
      run: tflint -f compact --config ../../.config/.tflint.hcl
      working-directory: modules/${{ matrix.module }}

  trivy:
    name: Security Scan
    runs-on: ubuntu-latest
    if: github.event.repository.private == false

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Trivy Security Scanner
      uses: aquasecurity/trivy-action@0.31.0
      with:
        version: ${{ env.TRIVY_VERSION }}
        scan-type: 'config'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        exit-code: '0'

    - name: Upload Security Scan Results
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
        wait-for-processing: true

  terraform-docs:
    name: Terraform Docs (${{ matrix.module }})
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: discover-modules-examples
    strategy:
      matrix:
        module: ${{ fromJson(needs.discover-modules-examples.outputs.modules) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Terraform Docs
      uses: terraform-docs/gh-actions@v1.4.1
      with:
        working-dir: modules/${{ matrix.module }}
        config-file: ../../.config/.terraform-docs.yml
        output-file: README.md
        fail-on-diff: "false"
        template: ""

    - name: Check For Changes
      run: |
        if [[ -n $(git diff --name-only modules/${{ matrix.module }}/README.md) ]]; then
          echo "::error::Terraform docs are out of sync!"
          echo "::group::Diff output"
          git diff modules/${{ matrix.module }}/README.md
          echo "::endgroup::"
          echo ""
          echo "To fix this, run: make docs"
          exit 1
        else
          echo "Terraform docs are up to date"
        fi

  examples:
    name: Test Examples (${{ matrix.example }})
    runs-on: ubuntu-latest
    needs: discover-modules-examples
    if: |
      github.event.inputs.test_examples == 'true' ||
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'test-examples')) ||
      (github.event_name == 'push' && contains(github.event.head_commit.message, '[test-examples]'))
    strategy:
      matrix:
        example: ${{ fromJson(needs.discover-modules-examples.outputs.examples) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}

    - name: Run Terraform Init
      run: terraform init
      working-directory: examples/${{ matrix.example }}

    - name: Run Terraform Validate
      run: terraform validate
      working-directory: examples/${{ matrix.example }}

    - name: Run Terraform Plan
      run: terraform plan
      working-directory: examples/${{ matrix.example }}
